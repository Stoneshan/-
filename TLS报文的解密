分三个步骤：
1、创建一个用来存放key信息的日志文件，然后在系统里配置一个环
2、境变量SSLKEYLOGFILE，它的值就是这个文件的路径。
3、重启浏览器，启动抓包程序，然后访问HTTPS站点，此时TLS密钥信息将会导出到这个日志文件，而加密报文也会随着抓包，被保存到抓包文件中。


操作：
1、在Wireshark里，打开Preferences菜单，在Protocol列表里找到TLS，然后把(Pre)-Master-Secret log filename配置为那个文件的路径。


原理：
其实是这样的：浏览器在启动过程中会尝试读取SSLKEYLOGFILE这个环境变量。
如果存在这个变量，而它指向的又是一个有效的文件，那么浏览器就会做最为关键的事情了：它去调用TLS库，
让TLS库把访问HTTPS站点的过程中的key信息导出到SSLKEYLOGFILE文件中。


SSLKEYLOGFILE文件：
这个文件之所以能够解密TLS，最关键的是，TLS库把密钥交换阶段的
核心信息Master secret导出到了这个文件中。基于这个信息，
Wireshark就可以还原出当时的对称密钥，从而破解密文。

总结：要想破解密文，既要有抓包文件，也要有SSLKEYLOGFILE日志文件，两者结合才能解密；
      而且不要忘了，即使你有抓包文件和日志文件，要是没抓到TLS握手阶段的报文，也还是不能解密，因为缺少了客户端随机数、加密算法参数等信息。

这个只是在客户端抓包解密，服务端（依托软件的实现）
